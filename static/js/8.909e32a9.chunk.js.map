{"version":3,"sources":["Components/SignIn.js"],"names":["SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","guest","preventDefault","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","successVal","changeLoginStatus","buttonColor","backgroundColor","className","id","htmlFor","onChange","this","type","name","onClick","style","React","Component"],"mappings":"+LAEMA,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KA4EVC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SA9E3B,EAoFnBC,iBAAmB,SAACL,GAChB,EAAKC,SAAS,CAAEK,eAAgBN,EAAMG,OAAOC,SArF9B,EA2FnBG,eAAiB,SAACP,EAAOQ,GACrBR,EAAMS,iBAGNC,MAAM,mDAAoD,CACtDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBC,MAAO,EAAKC,MAAMf,YAClBgB,SAAU,EAAKD,MAAMX,mBAGxBa,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACiB,YAAfA,GACA,EAAKxB,MAAMyB,kBAAkBf,MAxGzC,EAAKS,MAAQ,CACTf,YAAa,GACbI,eAAgB,IAJL,E,sEAUT,IAAD,OAGCkB,EAAc,CAACC,gBAAiB,WAEtC,OACI,6BAASC,UAAU,kEACf,0BAAMA,UAAU,gBACZ,yBAAKA,UAAU,WACX,8BACI,8BAAUC,GAAG,UAAUD,UAAU,6BAC7B,4BAAQA,UAAU,kBAAlB,WAGA,yBAAKA,UAAU,OACX,2BAAOA,UAAU,oBAAoBE,QAAQ,iBAA7C,SACA,2BACIC,SAAUC,KAAK/B,cACf2B,UAAU,wEAAwEK,KAAK,QAAQC,KAAK,gBAAgBL,GAAG,mBAK/H,yBAAKD,UAAU,OACX,2BAAOA,UAAU,oBAAoBE,QAAQ,YAA7C,YACA,2BACIC,SAAUC,KAAKzB,iBACfqB,UAAU,0EAA0EK,KAAK,WAAWC,KAAK,WAAWL,GAAG,cAK/H,2BAAOD,UAAU,8BAA6B,2BAAOK,KAAK,aAA1D,iBAIJ,6BACI,2BAAOE,QAAS,SAACjC,GAAD,OAAW,EAAKO,eAAeP,GAAO,IAAQ0B,UAAU,4DAA4DQ,MAAOV,EAAaO,KAAK,SAAS3B,MAAM,eAYxL,wBAAIsB,UAAU,UAAd,UAEA,yBAAKA,UAAU,uBACX,2BAAOO,QAAS,kBAAM,EAAKnC,MAAMyB,mBAAkB,IAAOG,UAAU,4DAA4DK,KAAK,SAASG,MAAOV,EAAapB,MAAM,oBAG5K,yBAAKsB,UAAU,wBACX,uBAAGA,UAAU,IAAb,2FACA,uBAAGA,UAAU,IAAb,mF,GApEHS,IAAMC,WAiHZvC","file":"static/js/8.909e32a9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: '',\r\n        }\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    render() {\r\n        // const { onRouteChange } = this.props; // Maybe I'll add this if I feel like it\r\n\r\n        const buttonColor = {backgroundColor: '#41A0BF'};\r\n\r\n        return (\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <form>\r\n                            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                                <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\r\n                                {/* Email */}\r\n                                <div className=\"mt3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                    <input\r\n                                        onChange={this.onEmailChange}\r\n                                        className=\"pa2 input-reset ba bg-light-gray hover-bg-moon-gray hover-black w-100\" type=\"email\" name=\"email-address\" id=\"email-address\"\r\n                                    />\r\n                                </div>\r\n\r\n                                {/* PW */}\r\n                                <div className=\"mv3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                    <input\r\n                                        onChange={this.onPasswordChange}\r\n                                        className=\"b pa2 input-reset ba bg-light-gray hover-bg-moon-gray hover-black w-100\" type=\"password\" name=\"password\" id=\"password\"\r\n                                    />\r\n                                </div>\r\n\r\n                                {/* Remember me */}\r\n                                <label className=\"pa0 ma0 lh-copy f6 pointer\"><input type=\"checkbox\" /> Remember me</label>\r\n                            </fieldset>\r\n\r\n                            {/* Sign in */}\r\n                            <div>\r\n                                <input onClick={(event) => this.onSubmitSignIn(event, false)} className=\"b ph3 pv2 input-reset ba b--black grow pointer f4 dib br3\" style={buttonColor} type=\"submit\" value=\"Sign in\" />\r\n                            </div>\r\n\r\n                            {/* Register */}\r\n                            {/* <div className=\"lh-copy mt3\">\r\n                            <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                            <a href=\"#0\" className=\"f6 link dim black db\">Forgot your password?</a>\r\n                        </div> */}\r\n\r\n                        </form>\r\n                    </div>\r\n\r\n                    <h1 className='mt4 tc'>- OR -</h1>\r\n\r\n                    <div className='flex justify-center'>\r\n                        <input onClick={() => this.props.changeLoginStatus(true)} className=\"b mt3 ph3 pv2 input-reset ba b--black grow pointer f3 br3\" type=\"submit\" style={buttonColor} value=\"Enter as guest\" />\r\n                    </div>\r\n\r\n                    <div className='flex flex-column mt3'>\r\n                        <p className=''>Signing in as a guest means you can see my progress but will be unable to add any data.</p>\r\n                        <p className=''>Registration is currently not an option. It may also never be an option.</p>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    // Get email\r\n    onEmailChange = (event) => {\r\n        this.setState({ signInEmail: event.target.value });\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    // Get PW\r\n    onPasswordChange = (event) => {\r\n        this.setState({ signInPassword: event.target.value });\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    // Sign in button submitted\r\n    onSubmitSignIn = (event, guest) => {\r\n        event.preventDefault(); // Stop page refresh when enter is pressed\r\n\r\n        // Call to backend\r\n        fetch('https://obscure-river-59718.herokuapp.com/signin', {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(successVal => {\r\n                if (successVal === 'success') {\r\n                    this.props.changeLoginStatus(guest);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport default SignIn;"],"sourceRoot":""}